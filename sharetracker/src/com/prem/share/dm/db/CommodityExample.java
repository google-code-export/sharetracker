package com.prem.share.dm.db;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CommodityExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public CommodityExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	protected CommodityExample(CommodityExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table commodity
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andCommodityIdIsNull() {
			addCriterion("commodity_id is null");
			return this;
		}

		public Criteria andCommodityIdIsNotNull() {
			addCriterion("commodity_id is not null");
			return this;
		}

		public Criteria andCommodityIdEqualTo(String value) {
			addCriterion("commodity_id =", value, "commodityId");
			return this;
		}

		public Criteria andCommodityIdNotEqualTo(String value) {
			addCriterion("commodity_id <>", value, "commodityId");
			return this;
		}

		public Criteria andCommodityIdGreaterThan(String value) {
			addCriterion("commodity_id >", value, "commodityId");
			return this;
		}

		public Criteria andCommodityIdGreaterThanOrEqualTo(String value) {
			addCriterion("commodity_id >=", value, "commodityId");
			return this;
		}

		public Criteria andCommodityIdLessThan(String value) {
			addCriterion("commodity_id <", value, "commodityId");
			return this;
		}

		public Criteria andCommodityIdLessThanOrEqualTo(String value) {
			addCriterion("commodity_id <=", value, "commodityId");
			return this;
		}

		public Criteria andCommodityIdLike(String value) {
			addCriterion("commodity_id like", value, "commodityId");
			return this;
		}

		public Criteria andCommodityIdNotLike(String value) {
			addCriterion("commodity_id not like", value, "commodityId");
			return this;
		}

		public Criteria andCommodityIdIn(List<String> values) {
			addCriterion("commodity_id in", values, "commodityId");
			return this;
		}

		public Criteria andCommodityIdNotIn(List<String> values) {
			addCriterion("commodity_id not in", values, "commodityId");
			return this;
		}

		public Criteria andCommodityIdBetween(String value1, String value2) {
			addCriterion("commodity_id between", value1, value2, "commodityId");
			return this;
		}

		public Criteria andCommodityIdNotBetween(String value1, String value2) {
			addCriterion("commodity_id not between", value1, value2,
					"commodityId");
			return this;
		}

		public Criteria andExchangeIsNull() {
			addCriterion("exchange is null");
			return this;
		}

		public Criteria andExchangeIsNotNull() {
			addCriterion("exchange is not null");
			return this;
		}

		public Criteria andExchangeEqualTo(String value) {
			addCriterion("exchange =", value, "exchange");
			return this;
		}

		public Criteria andExchangeNotEqualTo(String value) {
			addCriterion("exchange <>", value, "exchange");
			return this;
		}

		public Criteria andExchangeGreaterThan(String value) {
			addCriterion("exchange >", value, "exchange");
			return this;
		}

		public Criteria andExchangeGreaterThanOrEqualTo(String value) {
			addCriterion("exchange >=", value, "exchange");
			return this;
		}

		public Criteria andExchangeLessThan(String value) {
			addCriterion("exchange <", value, "exchange");
			return this;
		}

		public Criteria andExchangeLessThanOrEqualTo(String value) {
			addCriterion("exchange <=", value, "exchange");
			return this;
		}

		public Criteria andExchangeLike(String value) {
			addCriterion("exchange like", value, "exchange");
			return this;
		}

		public Criteria andExchangeNotLike(String value) {
			addCriterion("exchange not like", value, "exchange");
			return this;
		}

		public Criteria andExchangeIn(List<String> values) {
			addCriterion("exchange in", values, "exchange");
			return this;
		}

		public Criteria andExchangeNotIn(List<String> values) {
			addCriterion("exchange not in", values, "exchange");
			return this;
		}

		public Criteria andExchangeBetween(String value1, String value2) {
			addCriterion("exchange between", value1, value2, "exchange");
			return this;
		}

		public Criteria andExchangeNotBetween(String value1, String value2) {
			addCriterion("exchange not between", value1, value2, "exchange");
			return this;
		}

		public Criteria andDescriptionIsNull() {
			addCriterion("description is null");
			return this;
		}

		public Criteria andDescriptionIsNotNull() {
			addCriterion("description is not null");
			return this;
		}

		public Criteria andDescriptionEqualTo(String value) {
			addCriterion("description =", value, "description");
			return this;
		}

		public Criteria andDescriptionNotEqualTo(String value) {
			addCriterion("description <>", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThan(String value) {
			addCriterion("description >", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("description >=", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThan(String value) {
			addCriterion("description <", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThanOrEqualTo(String value) {
			addCriterion("description <=", value, "description");
			return this;
		}

		public Criteria andDescriptionLike(String value) {
			addCriterion("description like", value, "description");
			return this;
		}

		public Criteria andDescriptionNotLike(String value) {
			addCriterion("description not like", value, "description");
			return this;
		}

		public Criteria andDescriptionIn(List<String> values) {
			addCriterion("description in", values, "description");
			return this;
		}

		public Criteria andDescriptionNotIn(List<String> values) {
			addCriterion("description not in", values, "description");
			return this;
		}

		public Criteria andDescriptionBetween(String value1, String value2) {
			addCriterion("description between", value1, value2, "description");
			return this;
		}

		public Criteria andDescriptionNotBetween(String value1, String value2) {
			addCriterion("description not between", value1, value2,
					"description");
			return this;
		}

		public Criteria andQuantityIsNull() {
			addCriterion("quantity is null");
			return this;
		}

		public Criteria andQuantityIsNotNull() {
			addCriterion("quantity is not null");
			return this;
		}

		public Criteria andQuantityEqualTo(Integer value) {
			addCriterion("quantity =", value, "quantity");
			return this;
		}

		public Criteria andQuantityNotEqualTo(Integer value) {
			addCriterion("quantity <>", value, "quantity");
			return this;
		}

		public Criteria andQuantityGreaterThan(Integer value) {
			addCriterion("quantity >", value, "quantity");
			return this;
		}

		public Criteria andQuantityGreaterThanOrEqualTo(Integer value) {
			addCriterion("quantity >=", value, "quantity");
			return this;
		}

		public Criteria andQuantityLessThan(Integer value) {
			addCriterion("quantity <", value, "quantity");
			return this;
		}

		public Criteria andQuantityLessThanOrEqualTo(Integer value) {
			addCriterion("quantity <=", value, "quantity");
			return this;
		}

		public Criteria andQuantityIn(List<Integer> values) {
			addCriterion("quantity in", values, "quantity");
			return this;
		}

		public Criteria andQuantityNotIn(List<Integer> values) {
			addCriterion("quantity not in", values, "quantity");
			return this;
		}

		public Criteria andQuantityBetween(Integer value1, Integer value2) {
			addCriterion("quantity between", value1, value2, "quantity");
			return this;
		}

		public Criteria andQuantityNotBetween(Integer value1, Integer value2) {
			addCriterion("quantity not between", value1, value2, "quantity");
			return this;
		}
	}
}