package com.prem.share.dm.db.dao.impl;

import com.prem.share.dm.db.brokerage;
import com.prem.share.dm.db.brokerageExample;
import com.prem.share.dm.db.dao.brokerageDAO;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class brokerageDAOImpl extends SqlMapClientDaoSupport implements brokerageDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table brokerage
     *
     * @ibatorgenerated Wed Jul 21 16:18:59 GMT+05:30 2010
     */
    public brokerageDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table brokerage
     *
     * @ibatorgenerated Wed Jul 21 16:18:59 GMT+05:30 2010
     */
    public int countbrokerageByExample(brokerageExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("brokerage.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table brokerage
     *
     * @ibatorgenerated Wed Jul 21 16:18:59 GMT+05:30 2010
     */
    public int deletebrokerageByExample(brokerageExample example) {
        int rows = getSqlMapClientTemplate().delete("brokerage.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table brokerage
     *
     * @ibatorgenerated Wed Jul 21 16:18:59 GMT+05:30 2010
     */
    public void insertbrokerage(brokerage record) {
        getSqlMapClientTemplate().insert("brokerage.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table brokerage
     *
     * @ibatorgenerated Wed Jul 21 16:18:59 GMT+05:30 2010
     */
    public void insertbrokerageSelective(brokerage record) {
        getSqlMapClientTemplate().insert("brokerage.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table brokerage
     *
     * @ibatorgenerated Wed Jul 21 16:18:59 GMT+05:30 2010
     */
    @SuppressWarnings("unchecked")
    public List<brokerage> selectbrokerageByExample(brokerageExample example) {
        List<brokerage> list = getSqlMapClientTemplate().queryForList("brokerage.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table brokerage
     *
     * @ibatorgenerated Wed Jul 21 16:18:59 GMT+05:30 2010
     */
    public int updatebrokerageByExampleSelective(brokerage record, brokerageExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("brokerage.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table brokerage
     *
     * @ibatorgenerated Wed Jul 21 16:18:59 GMT+05:30 2010
     */
    public int updatebrokerageByExample(brokerage record, brokerageExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("brokerage.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table brokerage
     *
     * @ibatorgenerated Wed Jul 21 16:18:59 GMT+05:30 2010
     */
    private static class UpdateByExampleParms extends brokerageExample {
        private Object record;

        public UpdateByExampleParms(Object record, brokerageExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}