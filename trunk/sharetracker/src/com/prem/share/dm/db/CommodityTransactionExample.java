package com.prem.share.dm.db;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class CommodityTransactionExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public CommodityTransactionExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	protected CommodityTransactionExample(CommodityTransactionExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table commodity_transaction
	 * @ibatorgenerated  Mon Oct 24 16:28:18 IST 2011
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andTransactionIdIsNull() {
			addCriterion("transaction_id is null");
			return this;
		}

		public Criteria andTransactionIdIsNotNull() {
			addCriterion("transaction_id is not null");
			return this;
		}

		public Criteria andTransactionIdEqualTo(Integer value) {
			addCriterion("transaction_id =", value, "transactionId");
			return this;
		}

		public Criteria andTransactionIdNotEqualTo(Integer value) {
			addCriterion("transaction_id <>", value, "transactionId");
			return this;
		}

		public Criteria andTransactionIdGreaterThan(Integer value) {
			addCriterion("transaction_id >", value, "transactionId");
			return this;
		}

		public Criteria andTransactionIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("transaction_id >=", value, "transactionId");
			return this;
		}

		public Criteria andTransactionIdLessThan(Integer value) {
			addCriterion("transaction_id <", value, "transactionId");
			return this;
		}

		public Criteria andTransactionIdLessThanOrEqualTo(Integer value) {
			addCriterion("transaction_id <=", value, "transactionId");
			return this;
		}

		public Criteria andTransactionIdIn(List<Integer> values) {
			addCriterion("transaction_id in", values, "transactionId");
			return this;
		}

		public Criteria andTransactionIdNotIn(List<Integer> values) {
			addCriterion("transaction_id not in", values, "transactionId");
			return this;
		}

		public Criteria andTransactionIdBetween(Integer value1, Integer value2) {
			addCriterion("transaction_id between", value1, value2,
					"transactionId");
			return this;
		}

		public Criteria andTransactionIdNotBetween(Integer value1,
				Integer value2) {
			addCriterion("transaction_id not between", value1, value2,
					"transactionId");
			return this;
		}

		public Criteria andCommodityCommodityIdIsNull() {
			addCriterion("COMMODITY_commodity_id is null");
			return this;
		}

		public Criteria andCommodityCommodityIdIsNotNull() {
			addCriterion("COMMODITY_commodity_id is not null");
			return this;
		}

		public Criteria andCommodityCommodityIdEqualTo(String value) {
			addCriterion("COMMODITY_commodity_id =", value,
					"commodityCommodityId");
			return this;
		}

		public Criteria andCommodityCommodityIdNotEqualTo(String value) {
			addCriterion("COMMODITY_commodity_id <>", value,
					"commodityCommodityId");
			return this;
		}

		public Criteria andCommodityCommodityIdGreaterThan(String value) {
			addCriterion("COMMODITY_commodity_id >", value,
					"commodityCommodityId");
			return this;
		}

		public Criteria andCommodityCommodityIdGreaterThanOrEqualTo(String value) {
			addCriterion("COMMODITY_commodity_id >=", value,
					"commodityCommodityId");
			return this;
		}

		public Criteria andCommodityCommodityIdLessThan(String value) {
			addCriterion("COMMODITY_commodity_id <", value,
					"commodityCommodityId");
			return this;
		}

		public Criteria andCommodityCommodityIdLessThanOrEqualTo(String value) {
			addCriterion("COMMODITY_commodity_id <=", value,
					"commodityCommodityId");
			return this;
		}

		public Criteria andCommodityCommodityIdLike(String value) {
			addCriterion("COMMODITY_commodity_id like", value,
					"commodityCommodityId");
			return this;
		}

		public Criteria andCommodityCommodityIdNotLike(String value) {
			addCriterion("COMMODITY_commodity_id not like", value,
					"commodityCommodityId");
			return this;
		}

		public Criteria andCommodityCommodityIdIn(List<String> values) {
			addCriterion("COMMODITY_commodity_id in", values,
					"commodityCommodityId");
			return this;
		}

		public Criteria andCommodityCommodityIdNotIn(List<String> values) {
			addCriterion("COMMODITY_commodity_id not in", values,
					"commodityCommodityId");
			return this;
		}

		public Criteria andCommodityCommodityIdBetween(String value1,
				String value2) {
			addCriterion("COMMODITY_commodity_id between", value1, value2,
					"commodityCommodityId");
			return this;
		}

		public Criteria andCommodityCommodityIdNotBetween(String value1,
				String value2) {
			addCriterion("COMMODITY_commodity_id not between", value1, value2,
					"commodityCommodityId");
			return this;
		}

		public Criteria andLotIsNull() {
			addCriterion("lot is null");
			return this;
		}

		public Criteria andLotIsNotNull() {
			addCriterion("lot is not null");
			return this;
		}

		public Criteria andLotEqualTo(Integer value) {
			addCriterion("lot =", value, "lot");
			return this;
		}

		public Criteria andLotNotEqualTo(Integer value) {
			addCriterion("lot <>", value, "lot");
			return this;
		}

		public Criteria andLotGreaterThan(Integer value) {
			addCriterion("lot >", value, "lot");
			return this;
		}

		public Criteria andLotGreaterThanOrEqualTo(Integer value) {
			addCriterion("lot >=", value, "lot");
			return this;
		}

		public Criteria andLotLessThan(Integer value) {
			addCriterion("lot <", value, "lot");
			return this;
		}

		public Criteria andLotLessThanOrEqualTo(Integer value) {
			addCriterion("lot <=", value, "lot");
			return this;
		}

		public Criteria andLotIn(List<Integer> values) {
			addCriterion("lot in", values, "lot");
			return this;
		}

		public Criteria andLotNotIn(List<Integer> values) {
			addCriterion("lot not in", values, "lot");
			return this;
		}

		public Criteria andLotBetween(Integer value1, Integer value2) {
			addCriterion("lot between", value1, value2, "lot");
			return this;
		}

		public Criteria andLotNotBetween(Integer value1, Integer value2) {
			addCriterion("lot not between", value1, value2, "lot");
			return this;
		}

		public Criteria andPriceIsNull() {
			addCriterion("price is null");
			return this;
		}

		public Criteria andPriceIsNotNull() {
			addCriterion("price is not null");
			return this;
		}

		public Criteria andPriceEqualTo(BigDecimal value) {
			addCriterion("price =", value, "price");
			return this;
		}

		public Criteria andPriceNotEqualTo(BigDecimal value) {
			addCriterion("price <>", value, "price");
			return this;
		}

		public Criteria andPriceGreaterThan(BigDecimal value) {
			addCriterion("price >", value, "price");
			return this;
		}

		public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("price >=", value, "price");
			return this;
		}

		public Criteria andPriceLessThan(BigDecimal value) {
			addCriterion("price <", value, "price");
			return this;
		}

		public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
			addCriterion("price <=", value, "price");
			return this;
		}

		public Criteria andPriceIn(List<BigDecimal> values) {
			addCriterion("price in", values, "price");
			return this;
		}

		public Criteria andPriceNotIn(List<BigDecimal> values) {
			addCriterion("price not in", values, "price");
			return this;
		}

		public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("price between", value1, value2, "price");
			return this;
		}

		public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("price not between", value1, value2, "price");
			return this;
		}

		public Criteria andTransactionTypeIsNull() {
			addCriterion("transaction_type is null");
			return this;
		}

		public Criteria andTransactionTypeIsNotNull() {
			addCriterion("transaction_type is not null");
			return this;
		}

		public Criteria andTransactionTypeEqualTo(String value) {
			addCriterion("transaction_type =", value, "transactionType");
			return this;
		}

		public Criteria andTransactionTypeNotEqualTo(String value) {
			addCriterion("transaction_type <>", value, "transactionType");
			return this;
		}

		public Criteria andTransactionTypeGreaterThan(String value) {
			addCriterion("transaction_type >", value, "transactionType");
			return this;
		}

		public Criteria andTransactionTypeGreaterThanOrEqualTo(String value) {
			addCriterion("transaction_type >=", value, "transactionType");
			return this;
		}

		public Criteria andTransactionTypeLessThan(String value) {
			addCriterion("transaction_type <", value, "transactionType");
			return this;
		}

		public Criteria andTransactionTypeLessThanOrEqualTo(String value) {
			addCriterion("transaction_type <=", value, "transactionType");
			return this;
		}

		public Criteria andTransactionTypeLike(String value) {
			addCriterion("transaction_type like", value, "transactionType");
			return this;
		}

		public Criteria andTransactionTypeNotLike(String value) {
			addCriterion("transaction_type not like", value, "transactionType");
			return this;
		}

		public Criteria andTransactionTypeIn(List<String> values) {
			addCriterion("transaction_type in", values, "transactionType");
			return this;
		}

		public Criteria andTransactionTypeNotIn(List<String> values) {
			addCriterion("transaction_type not in", values, "transactionType");
			return this;
		}

		public Criteria andTransactionTypeBetween(String value1, String value2) {
			addCriterion("transaction_type between", value1, value2,
					"transactionType");
			return this;
		}

		public Criteria andTransactionTypeNotBetween(String value1,
				String value2) {
			addCriterion("transaction_type not between", value1, value2,
					"transactionType");
			return this;
		}

		public Criteria andMarketValueIsNull() {
			addCriterion("market_value is null");
			return this;
		}

		public Criteria andMarketValueIsNotNull() {
			addCriterion("market_value is not null");
			return this;
		}

		public Criteria andMarketValueEqualTo(BigDecimal value) {
			addCriterion("market_value =", value, "marketValue");
			return this;
		}

		public Criteria andMarketValueNotEqualTo(BigDecimal value) {
			addCriterion("market_value <>", value, "marketValue");
			return this;
		}

		public Criteria andMarketValueGreaterThan(BigDecimal value) {
			addCriterion("market_value >", value, "marketValue");
			return this;
		}

		public Criteria andMarketValueGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("market_value >=", value, "marketValue");
			return this;
		}

		public Criteria andMarketValueLessThan(BigDecimal value) {
			addCriterion("market_value <", value, "marketValue");
			return this;
		}

		public Criteria andMarketValueLessThanOrEqualTo(BigDecimal value) {
			addCriterion("market_value <=", value, "marketValue");
			return this;
		}

		public Criteria andMarketValueIn(List<BigDecimal> values) {
			addCriterion("market_value in", values, "marketValue");
			return this;
		}

		public Criteria andMarketValueNotIn(List<BigDecimal> values) {
			addCriterion("market_value not in", values, "marketValue");
			return this;
		}

		public Criteria andMarketValueBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("market_value between", value1, value2, "marketValue");
			return this;
		}

		public Criteria andMarketValueNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("market_value not between", value1, value2,
					"marketValue");
			return this;
		}

		public Criteria andExtraChargesIsNull() {
			addCriterion("extra_charges is null");
			return this;
		}

		public Criteria andExtraChargesIsNotNull() {
			addCriterion("extra_charges is not null");
			return this;
		}

		public Criteria andExtraChargesEqualTo(BigDecimal value) {
			addCriterion("extra_charges =", value, "extraCharges");
			return this;
		}

		public Criteria andExtraChargesNotEqualTo(BigDecimal value) {
			addCriterion("extra_charges <>", value, "extraCharges");
			return this;
		}

		public Criteria andExtraChargesGreaterThan(BigDecimal value) {
			addCriterion("extra_charges >", value, "extraCharges");
			return this;
		}

		public Criteria andExtraChargesGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("extra_charges >=", value, "extraCharges");
			return this;
		}

		public Criteria andExtraChargesLessThan(BigDecimal value) {
			addCriterion("extra_charges <", value, "extraCharges");
			return this;
		}

		public Criteria andExtraChargesLessThanOrEqualTo(BigDecimal value) {
			addCriterion("extra_charges <=", value, "extraCharges");
			return this;
		}

		public Criteria andExtraChargesIn(List<BigDecimal> values) {
			addCriterion("extra_charges in", values, "extraCharges");
			return this;
		}

		public Criteria andExtraChargesNotIn(List<BigDecimal> values) {
			addCriterion("extra_charges not in", values, "extraCharges");
			return this;
		}

		public Criteria andExtraChargesBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("extra_charges between", value1, value2,
					"extraCharges");
			return this;
		}

		public Criteria andExtraChargesNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("extra_charges not between", value1, value2,
					"extraCharges");
			return this;
		}

		public Criteria andActualValueIsNull() {
			addCriterion("actual_value is null");
			return this;
		}

		public Criteria andActualValueIsNotNull() {
			addCriterion("actual_value is not null");
			return this;
		}

		public Criteria andActualValueEqualTo(BigDecimal value) {
			addCriterion("actual_value =", value, "actualValue");
			return this;
		}

		public Criteria andActualValueNotEqualTo(BigDecimal value) {
			addCriterion("actual_value <>", value, "actualValue");
			return this;
		}

		public Criteria andActualValueGreaterThan(BigDecimal value) {
			addCriterion("actual_value >", value, "actualValue");
			return this;
		}

		public Criteria andActualValueGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("actual_value >=", value, "actualValue");
			return this;
		}

		public Criteria andActualValueLessThan(BigDecimal value) {
			addCriterion("actual_value <", value, "actualValue");
			return this;
		}

		public Criteria andActualValueLessThanOrEqualTo(BigDecimal value) {
			addCriterion("actual_value <=", value, "actualValue");
			return this;
		}

		public Criteria andActualValueIn(List<BigDecimal> values) {
			addCriterion("actual_value in", values, "actualValue");
			return this;
		}

		public Criteria andActualValueNotIn(List<BigDecimal> values) {
			addCriterion("actual_value not in", values, "actualValue");
			return this;
		}

		public Criteria andActualValueBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("actual_value between", value1, value2, "actualValue");
			return this;
		}

		public Criteria andActualValueNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("actual_value not between", value1, value2,
					"actualValue");
			return this;
		}

		public Criteria andCommodityStatusIsNull() {
			addCriterion("commodity_status is null");
			return this;
		}

		public Criteria andCommodityStatusIsNotNull() {
			addCriterion("commodity_status is not null");
			return this;
		}

		public Criteria andCommodityStatusEqualTo(Integer value) {
			addCriterion("commodity_status =", value, "commodityStatus");
			return this;
		}

		public Criteria andCommodityStatusNotEqualTo(Integer value) {
			addCriterion("commodity_status <>", value, "commodityStatus");
			return this;
		}

		public Criteria andCommodityStatusGreaterThan(Integer value) {
			addCriterion("commodity_status >", value, "commodityStatus");
			return this;
		}

		public Criteria andCommodityStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("commodity_status >=", value, "commodityStatus");
			return this;
		}

		public Criteria andCommodityStatusLessThan(Integer value) {
			addCriterion("commodity_status <", value, "commodityStatus");
			return this;
		}

		public Criteria andCommodityStatusLessThanOrEqualTo(Integer value) {
			addCriterion("commodity_status <=", value, "commodityStatus");
			return this;
		}

		public Criteria andCommodityStatusIn(List<Integer> values) {
			addCriterion("commodity_status in", values, "commodityStatus");
			return this;
		}

		public Criteria andCommodityStatusNotIn(List<Integer> values) {
			addCriterion("commodity_status not in", values, "commodityStatus");
			return this;
		}

		public Criteria andCommodityStatusBetween(Integer value1, Integer value2) {
			addCriterion("commodity_status between", value1, value2,
					"commodityStatus");
			return this;
		}

		public Criteria andCommodityStatusNotBetween(Integer value1,
				Integer value2) {
			addCriterion("commodity_status not between", value1, value2,
					"commodityStatus");
			return this;
		}

		public Criteria andDateIsNull() {
			addCriterion("date is null");
			return this;
		}

		public Criteria andDateIsNotNull() {
			addCriterion("date is not null");
			return this;
		}

		public Criteria andDateEqualTo(Date value) {
			addCriterionForJDBCDate("date =", value, "date");
			return this;
		}

		public Criteria andDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("date <>", value, "date");
			return this;
		}

		public Criteria andDateGreaterThan(Date value) {
			addCriterionForJDBCDate("date >", value, "date");
			return this;
		}

		public Criteria andDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("date >=", value, "date");
			return this;
		}

		public Criteria andDateLessThan(Date value) {
			addCriterionForJDBCDate("date <", value, "date");
			return this;
		}

		public Criteria andDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("date <=", value, "date");
			return this;
		}

		public Criteria andDateIn(List<Date> values) {
			addCriterionForJDBCDate("date in", values, "date");
			return this;
		}

		public Criteria andDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("date not in", values, "date");
			return this;
		}

		public Criteria andDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("date between", value1, value2, "date");
			return this;
		}

		public Criteria andDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("date not between", value1, value2, "date");
			return this;
		}
	}
}